package nl.mpdev.project_manager_backend.services;

import java.io.IOException;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import nl.mpdev.project_manager_backend.models.Image;
import nl.mpdev.project_manager_backend.repositories.ImageRepository;

@Service
public class ImageService {

  private final ImageRepository imageRepository;
  private final ProjectService projectService;

  public ImageService(ImageRepository imageRepository, ProjectService projectService) {
    this.imageRepository = imageRepository;
    this.projectService = projectService;
  }

  public Image addImage(Image image) {
    return imageRepository.save(image);
  }

  public Image getImageById(Long id) {
    return imageRepository.findById(id).orElseThrow(() -> new RuntimeException("Something went wrong"));
  }

  public Image updateImage(Image image, Long id) throws IOException {
    Image existingImage = imageRepository.findById(image.getId())
        .orElseThrow(() -> new RuntimeException("Something went wrong"));
    existingImage.setName(image.getName());
    existingImage.setContentType(image.getContentType());
    existingImage.setSize(image.getSize());
    existingImage.setData(image.getData());
    existingImage.setProject(projectService.getProjectById(id));
    return imageRepository.save(existingImage);
  }

  public void deleteImage(Long id) {
    if (!imageRepository.existsById(id)) {
      throw new RuntimeException("This record does not exist");
    }
    imageRepository.deleteById(id);
  }
}
